//bubble sort
#include <iostream>
#include <cstdlib>
#include <vector>
using namespace std;
void bubble_sort(vector <int>& arr){
    int n = arr.size(); 
    bool swapped;
    for (int i=0;i<n-1;i++ ){
        swapped = false;
        #pragma omp parallel for shared(arr,swapped)
        for (int j =0; j<n-1-i;j++){
            if (arr[j]>arr[j+1]){
                swapped = true;
                swap(arr[j],arr[j+1]);
            }
        }
        if (!swapped){
            break;
        }
    }
    
    cout << "\n Sorted array: \n";
    for (int num : arr) {
        cout << num << " ";
    }
    cout << endl;
}

int main(){
    cout<<"Enter number of elements to be generated \n";
    int n;
    cin>> n;
    vector <int> numbers(n);
    for (int i = 0; i<n;i++){
        numbers[i]= rand()%1000;
    }
    cout<<"\nGenerated random numbers\n";
    for (int i=0;i<n;i++){
        cout<<numbers[i]<< " ";
    }
    bubble_sort(numbers);
    
    
}